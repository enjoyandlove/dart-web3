import 'dart:convert';

import 'package:test/test.dart';
import 'package:web3dart/src/contracts/types/arrays.dart';
import 'package:web3dart/src/contracts/types/integers.dart';
import 'package:web3dart/web3dart.dart';

void main() {
	var baz = new ContractFunction("baz",
			[
				new FunctionParameter("number", new UintType(M: 32)),
				new FunctionParameter("flag", new BoolType()),
			]
	);
	var bar = new ContractFunction("bar",
			[
				new FunctionParameter(
						"xy", new StaticLengthArrayType(new StaticLengthBytes(3), 2)
				),
			]
	);

  var sam = ContractFunction("sam", [
    FunctionParameter("b1", DynamicLengthBytes()),
    FunctionParameter("b2", BoolType()),
    FunctionParameter("b3", DynamicLengthArrayType(UintType()))
  ], outputs: [
    FunctionParameter("b1", DynamicLengthBytes()),
    FunctionParameter("b2", BoolType()),
    FunctionParameter("b3", DynamicLengthArrayType(UintType()))
  ]);

	group('Function names and parameters', () {
		test("with simple functions", () {
			expect(baz.encodeName(), equals("baz(uint32,bool)"));
			expect(baz.encodeCall([new BigInt.from(69), true]), equals("0xcdcd77c0"
					 "0000000000000000000000000000000000000000000000000000000000000045"
					 "0000000000000000000000000000000000000000000000000000000000000001")
			);
			

			expect(bar.encodeName(), equals("bar(bytes3[2])"));
			expect(bar.encodeCall([[utf8.encode("abc"), utf8.encode("def")]]),
					equals("0xfce353f6"
						 "6162630000000000000000000000000000000000000000000000000000000000"
						 "6465660000000000000000000000000000000000000000000000000000000000")
			);

      expect(sam.encodeCall([utf8.encode("dave"), true, [BigInt.from(1), BigInt.from(2), BigInt.from(3)]]), equals(
        "0xa5643bf20000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000464617665000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000003"
      ));

      expect(sam.decodeReturnValues("0x0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000464617665000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000003").first,
        equals(utf8.encode("dave")));
		});
	});
}
